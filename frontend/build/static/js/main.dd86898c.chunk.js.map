{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderContants.js","components/Header.js","actions/userActions.js","components/Footer.js","components/Product.js","components/Message.js","components/Loader.js","Screens/HomeScreen.js","actions/productActions.js","Screens/ProductScreen.js","actions/cartActions.js","Screens/CartScreen.js","components/FormContainer.js","Screens/LoginScreen.js","Screens/RegisterScreen.js","Screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","Screens/ShippingScreen.js","Screens/PaymentScreen.js","Screens/OrderScreen.js","Screens/PlaceOrderScreen.js","App.js","reportWebVitals.js","index.js"],"names":["reducer","combineReducers","productList","state","arguments","length","undefined","products","action","type","loading","payload","error","productDetails","product","reviews","Object","objectSpread","cart","cartItems","item","existItem","find","x","map","concat","toConsumableArray","filter","shippingAddress","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","success","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","apply","Header","dispatch","useDispatch","useSelector","react_default","a","createElement","Navbar","bg","variant","expand","collapseOnSelect","Container","react_router_bootstrap","to","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","NavDropdown","title","name","Item","onClick","removeItem","Footer","Row","Col","Product","_ref","Card","react_router_dom","_id","Img","src","image","Body","Title","as","Text","organizer","md","date","time","ReactHtmlParser","location","categories","p","price","Message","children","Alert","defaultProps","Loader","Spinner","animation","role","style","width","height","margin","display","HomeScreen","useEffect","asyncToGenerator","regenerator_default","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","axios","get","sent","t0","response","message","stop","_x","this","Fragment","components_Loader","components_Message","key","sm","lg","lx","components_Product","ProductScreen","_useState","useState","_useState2","slicedToArray","qty","setQty","params","useParams","navigate","useNavigate","_ref2","_callee2","_yield$axios$get2","_context2","_x2","Image","alt","fluid","ListGroup","description","ticketsStock","Form","Control","value","onChange","e","target","Array","keys","Button","disabled","addToCart","getState","setItem","stringify","CartScreen","useLocation","productId","search","Number","split","removeFromCartHandler","removeFromCart","rounded","textDecoration","color","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","_useState3","_useState4","password","setPassword","redirect","components_FormContainer","onSubmit","preventDefault","config","_yield$axios$post","headers","Content-Type","post","login","Group","controlId","Label","placeholder","RegisterScreen","setName","_useState5","_useState6","_useState7","_useState8","confirmPassword","setConfirmPassword","_useState9","_useState10","setMessage","_yield$axios$post2","register","ProfileScreen","loadingOrders","errorOrders","_ref3","_callee3","_getState","_context3","Authorization","token","_x3","_x4","_ref4","_callee4","_getState4","_context4","_x7","_x8","_getState2","_yield$axios$put","put","_x5","_x6","updateUserProfile","Table","striped","bordered","hover","responsive","createdAt","substring","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","components_CheckoutSteps","required","PaymentScreen","setPaymentMethod","Check","label","checked","OrderScreen","num","orderId","sdkReady","setSdkReady","loadingPay","successPay","itemsPrice","Math","round","addPayPalScript","clientId","script","document","async","onload","body","appendChild","window","paypal","href","index","shippingPrice","taxPrice","react_paypal_button_v2_lib","amount","onSuccess","paymentResult","console","log","_getState3","payOrder","PlaceOrderScreen","addDecimals","App","components_Header","react_router","path","element","Screens_HomeScreen","exact","Screens_ProductScreen","Screens_CartScreen","Screens_LoginScreen","Screens_RegisterScreen","Screens_ProfileScreen","Screens_ShippingScreen","Screens_PaymentScreen","Screens_OrderScreen","Screens_PlaceOrderScreen","components_Footer","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","es","src_App","getElementById"],"mappings":"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","file":"static/js/main.dd86898c.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './reducers/userReducers'\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from './reducers/orderReducers'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst paymentMethodFromStorage = localStorage.getItem('paymentMethod') ?\r\n    JSON.parse(localStorage.getItem('paymentMethod')) : {}\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n        paymentMethod: paymentMethodFromStorage\r\n    },\r\n    userLogin: {userInfo: userInfoFromStorage}\r\n}\r\n\r\nconst middleware = [thunk]\r\nconst store = createStore(\r\n                reducer,\r\n                initialState,\r\n                composeWithDevTools(applyMiddleware(...middleware))\r\n                )\r\n\r\nexport default store","//reducers are special funtions that read and write data in to a redux store. The parameters it takes includes current state and action(type of keyword). \r\nimport { \r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL\r\n} from '../constants/productConstants'\r\n\r\n//funtion called productListReducer.Its task is to retrieve the list of products form the DB.\r\nexport const productListReducer = (state = {products: []}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { loading: false, products: action.payload }               /* products (plural) because all products */\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload\r\n            }\r\n        default: \r\n            return state     //refers to initial state product: []//\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (\r\n    state = { product: { reviews: [] } }, action\r\n) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }                                /* '...' SPREAD OPERATOR allows you to copy all or part of an existing array or object into another array or object */ \r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }                /* product (singular) because one product */\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","// list of commands stored in variables.  These are all keywords that product reducer will lister for.//\r\n\r\n\r\n /* These three req. pertain to acquiring the product list as a whole */\r\nexport const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\n\r\n/* These three req. pertain to acquiring specific details on selected products */\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD\r\n} from \"../constants/cartConstants\";\r\n\r\n\r\n\r\nexport const cartReducer = (state = {cartItems : []}, action) => {\r\n    switch(action.type){\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n            const existItem = state.cartItems.find((x) => x.product === item.product)\r\n\r\n            if(existItem){\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((x) => x.product === existItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter((x) => x.product !== action.payload)\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload };\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\n\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\n\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\r\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\";\r\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\";\r\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\";\r\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\";\r\n","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL \r\n    \r\n         \r\n} from '../constants/orderContants'\r\n\r\n\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (\r\n    state = { \r\n        loading: true, \r\n        orderItems: [], \r\n        shippingAddress: {} \r\n    }, action \r\n) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return { loading: false, order: action.payload }\r\n        case ORDER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return { loading: true }\r\n        case ORDER_PAY_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case ORDER_PAY_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n      case ORDER_LIST_MY_REQUEST:\r\n        return {\r\n          loading: true,\r\n        }\r\n      case ORDER_LIST_MY_SUCCESS:\r\n        return {\r\n          loading: false,\r\n          orders: action.payload,\r\n        }\r\n      case ORDER_LIST_MY_FAIL:\r\n        return {\r\n          loading: false,\r\n          error: action.payload,\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  }","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'","import React from 'react'\r\nimport { Navbar, Container, Nav, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logout } from '../actions/userActions'\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n  \r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n  return (\r\n      <header>\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n          <Container>\r\n            \r\n            <LinkContainer to=\"/\"> \r\n              <Navbar.Brand>Event Master</Navbar.Brand>\r\n            </LinkContainer>\r\n            \r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              <Nav className=\"ms-auto\">\r\n            \r\n                <LinkContainer to=\"/cart\">\r\n                  <Nav.Link><i className='fa-solid fa-basket-shopping'></i> Basket of Goodies</Nav.Link>\r\n                </LinkContainer>\r\n                  \r\n                {userInfo ? (\r\n                  <NavDropdown title={userInfo.name} id='username'>\r\n                    <LinkContainer to='/profile'>\r\n                      <NavDropdown.Item>Portal to Account</NavDropdown.Item>\r\n                    </LinkContainer>\r\n                    <NavDropdown.Item onClick={logoutHandler}>\r\n                      Logout\r\n                    </NavDropdown.Item>\r\n                  </NavDropdown>\r\n                   ) : (\r\n                  <LinkContainer to='/login'>\r\n                    <Nav.Link><i className='fa-solid fa-bullseye'></i> Sign In</Nav.Link>\r\n                  </LinkContainer>\r\n                )}\r\n\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    )\r\n  }\r\n\r\nexport default Header\r\n\r\n\r\n\r\n\r\n","//for user login, register, update and logout of profile\r\nimport axios from 'axios'\r\nimport {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL\r\n} from '../constants/userConstants'\r\n\r\n\r\nexport const login = (email, password) => async (dispatch)=> {                              //when login button is hit, action is called(login) email and pw must be passed. \r\n\r\n  //tryblock\r\n  try{\r\n    dispatch({ type: USER_LOGIN_REQUEST })\r\n\r\n    // set up a config to that the api call returns a json.\r\n    const config = {                    \r\n      headers: {\r\n        //key and value\r\n        'Content-Type': 'application/json'\r\n      }  \r\n    }\r\n    //pass the key email and password called password and responding email and password, which are stored in parameters called email and password. But since both sides match you can just say email and password once( INSTEAD OF WRITING email:email and password:password). This hsould all return a id, name, email, isAdmin, and token key with corresponding values.\r\n    const {data} = await axios.post('api/users/login', {email, password}, config)      // attach this var so that it sets content type to application/json in header\r\n    \r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload: \r\n        error.response && error.response.data.message ? \r\n          error.response.data.message : error.message\r\n          \r\n    })\r\n  }\r\n}\r\n\r\n//once this is fired, the local storage is emptied of the user and pass and the action userlogout is fired\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n  dispatch({ type: USER_LOGOUT })\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_REGISTER_REQUEST })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n    const {data} = await axios.post(\r\n      '/api/users',\r\n      { name, email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload: \r\n        error.response && error.response.data.message ? \r\n          error.response.data.message : error.message\r\n    })\r\n  }    \r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_DETAILS_REQUEST })\r\n\r\n    const { userLogin: {userInfo} } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n      \r\n    const {data} = await axios.get(`/api/users/${id}`, config)\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch ({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: \r\n        error.response && error.response.data.message ?\r\n          error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST })\r\n      \r\n    const { userLogin: { userInfo } } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization:  `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const {data} = await axios.put(`/api/users/profile`, user, config)\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: \r\n        error.response && error.response.data.message ?\r\n          error.response.data.message : error.message\r\n    })\r\n  }\r\n}\r\n    \r\n\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-3'>\r\n            Copyright &copy; Event Master\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\nimport { Card, Row, Col } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport ReactHtmlParser from 'react-html-parser'\r\n\r\nconst Product = ({product}) => {\r\n\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top' />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div' className=\"text-center\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as='div'>\r\n                    <div id='organizer' className=\"text-center\">by {product.organizer}</div>\r\n                    <br></br>\r\n                    <Row>\r\n                        <Col md=\"3\">\r\n                            <div id='dateLabel'><strong className='text-nowrap'>Date:</strong></div>\r\n                        </Col> \r\n                        <Col>\r\n                            <div id='dateDisplay'>{product.date}</div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md=\"3\">\r\n                            <div id='timeLabel'><strong className='text-nowrap'>Time:</strong></div>\r\n                        </Col>\r\n                        <Col>\r\n                            <div id='timeDisplay'>{product.time}</div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md=\"3\">\r\n                            <div id='locationLabel'><strong className='text-nowrap'>Location:</strong></div>\r\n                        </Col>\r\n                        <Col>\r\n                            <div id='locationDisplay'>{ReactHtmlParser(product.location)}</div>\r\n                        </Col>\r\n                    </Row>\r\n                    <br></br>\r\n                    <div id='categories'>{product.categories.map((p) => \" [\" + p + \"]\")}</div>\r\n                </Card.Text>\r\n                        \r\n                <Card.Text as='h3'>${product.price}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                width: '100px',\r\n                height: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {Row, Col} from 'react-bootstrap'\r\n\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\n\r\n\r\nconst HomeScreen = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const productList = useSelector((state) => state.productList)\r\n  const {loading, error, products} = productList\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <>\r\n      <h1> Events </h1>\r\n      {loading ? (<Loader />) \r\n        : error ? (<Message variant='danger'>{error}</Message>) \r\n        : (\r\n        <Row>\r\n        {products.map((product) => (                                  /* bind array of prod to html. map is for loop \"for each product\" lets call output product which is the map variable.*/\r\n\r\n          <Col key={product._id} sm={12} md={6} lg={4} lx={3}>         \r\n            <Product product={product} /> \r\n          </Col>\r\n                                                                      /* two statements above: in Product comp, the product parameter comes from above output \"product\" which is the map variable*/\r\n        ))}\r\n      </Row>)}\r\n    </> \r\n  )\r\n  \r\n}\r\n\r\nexport default HomeScreen\r\n\r\n\r\n\r\n","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL\r\n} from '../constants/productConstants'\r\n\r\n\r\n    export const listProducts = () => async (dispatch) => {\r\n        try{\r\n            dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n            const {data} = await axios.get('/api/products')\r\n\r\n            dispatch({\r\n                type: PRODUCT_LIST_SUCCESS,\r\n                payload: data\r\n            })\r\n        } catch (error) {\r\n            dispatch({\r\n                type: PRODUCT_LIST_FAIL,\r\n                payload: \r\n                    error.response && error.response.data.message ? \r\n                        error.response.data.message : error.message\r\n            })\r\n        }\r\n    }\r\n\r\n    export const listProductDetails = (id) => async (dispatch) => {\r\n        try{\r\n            dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n            const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n            dispatch({\r\n                type: PRODUCT_DETAILS_SUCCESS,\r\n                payload: data\r\n            })\r\n        } catch (error) {\r\n            dispatch({\r\n                type: PRODUCT_DETAILS_FAIL,\r\n                payload:\r\n                    error.response && error.response.data.message ? \r\n                        error.response.data.message : error.message\r\n            })\r\n        }\r\n    }","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from \"react-bootstrap\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\n\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { listProductDetails } from \"../actions/productActions\";\r\n\r\nconst ProductScreen = () => {\r\n  const [qty, setQty] = useState(1);\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  // hook\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(params.id));\r\n  }, [dispatch, params]);\r\n\r\n  const addToCartHandler = () => {\r\n    navigate(`/cart/${params.id}?qty=${qty}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link className=\"btn btn-light my-3\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          <Col md={3}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n          </Col>\r\n\r\n          <Col md={6}>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h3>{product.name}</h3>\r\n              </ListGroup.Item>\r\n              \r\n              <ListGroup.Item>\r\n                by <strong>{product.organizer}</strong>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                {product.description}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <strong>When:</strong>\r\n                <br />\r\n                {product.date} at {product.time}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <strong>Where:</strong>\r\n                <br />\r\n                {ReactHtmlParser(product.location)}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                Price: ${product.price}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          \r\n          <Col md={3}>\r\n            <Card>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Status:</Col>\r\n                    <Col>\r\n                      {product.ticketsStock > 0 ? 'Tickets Available' : 'Sold Out'}\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                {product.ticketsStock > 0 && (\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Number of Tickets:</Col>\r\n                      <Col>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={qty}\r\n                          onChange={(e) => setQty(e.target.value)}\r\n                        >\r\n                          {[...Array(product.ticketsStock).keys()].map((x) => (\r\n                            <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                )}\r\n\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    className='btn-block'\r\n                    type='button'\r\n                    onClick={addToCartHandler}\r\n                   disabled={product.ticketsStock === 0}\r\n                  >\r\n                    Add To Cart\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n        \r\nexport default ProductScreen","import axios from 'axios'\r\nimport { \r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_SAVE_SHIPPING_ADDRESS\r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      ticketsStock: data.ticketsStock,\r\n      qty\r\n    }\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data\r\n  })\r\n\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data\r\n  })\r\n\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Link, useNavigate, useParams, useLocation } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\n\r\n\r\nconst CartScreen = () => {\r\n\r\n    const location = useLocation()\r\n    const dispatch = useDispatch()\r\n    const params = useParams()\r\n    const navigate = useNavigate()\r\n    const productId = params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    useEffect(() => {\r\n        if (productId){\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n    \r\n    const cart = useSelector((state) => state.cart)\r\n    const {cartItems} = cart\r\n    \r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n    \r\n    const checkoutHandler = () => {\r\n        navigate('/login?redirect=/shipping')\r\n    }        \r\n    \r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message>\r\n                        Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map((item) => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link \r\n                                            to={`/product/${item.product}`} \r\n                                            style={{ \r\n                                                textDecoration: 'none',\r\n                                                color: '#fff'\r\n                                            }}\r\n                                        >\r\n                                            {item.name}\r\n                                        </Link>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        ${item.price}\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Form.Control\r\n                                            as='select'\r\n                                            value={item.qty}\r\n                                            onChange={(e) => \r\n                                                dispatch(\r\n                                                    addToCart(item.product, Number(e.target.value))\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            {[...Array(item.ticketsStock).keys()].map((x) => (\r\n                                                <option key={x + 1} value={x + 1}>\r\n                                                    {x + 1}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button\r\n                                            type='button'\r\n                                            variant='light'\r\n                                            onClick={() => removeFromCartHandler(item.product)}\r\n                                        >\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>\r\n                                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items\r\n                            </h2>\r\n                            ${cartItems\r\n                                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                                .toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                                type='button'\r\n                                className='btn-block'\r\n                                disabled={cartItems.length === 0}\r\n                                onClick={checkoutHandler}\r\n                            >\r\n                                Proceed To Checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\n                            \r\n\r\nexport default CartScreen","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer","import React, { useState, useEffect } from 'react'\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\n\r\n\r\nconst LoginScreen = () => {\r\n\r\n    const location = useLocation()\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    \r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            navigate(redirect)\r\n        }\r\n    }, [navigate, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return(\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            \r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit'variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer?{' '}\r\n                    <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen","import React, { useState, useEffect } from 'react'\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = () => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const location = useLocation()\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector((state) => state.userRegister)\r\n    const { loading, error, userInfo} = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            navigate(redirect)\r\n          }\r\n        }, [navigate, userInfo, redirect])\r\n      \r\n        const submitHandler = (e) => {\r\n          e.preventDefault()\r\n          if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n          } else {\r\n            dispatch(register(name, email, password))\r\n          }\r\n        }\r\n      \r\n        return (\r\n          <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId='name'>\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type='name'\r\n                  placeholder='Enter name'\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n      \r\n              <Form.Group controlId='email'>\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n                  type='email'\r\n                  placeholder='Enter email'\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n      \r\n              <Form.Group controlId='password'>\r\n                <Form.Label>Password Address</Form.Label>\r\n                <Form.Control\r\n                  type='password'\r\n                  placeholder='Enter password'\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n      \r\n              <Form.Group controlId='confirmPassword'>\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                  type='password'\r\n                  placeholder='Confirm password'\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n      \r\n              <Button type='submit' variant='primary'>\r\n                Register\r\n              </Button>\r\n            </Form>\r\n      \r\n            <Row className='py-3'>\r\n              <Col>\r\n                Have an Account?{' '}\r\n                <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                  Login\r\n                </Link>\r\n              </Col>\r\n            </Row>\r\n          </FormContainer>\r\n        )\r\n      }\r\n      \r\n      export default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport {useNavigate } from 'react-router-dom'\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nconst ProfileScreen = () => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy)\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      navigate('/login')\r\n    } else {\r\n      if (!user.name) {\r\n        dispatch(getUserDetails('profile'))\r\n        dispatch(listMyOrders())\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [dispatch, userInfo, user, navigate])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {success && <Message variant='success'>Profile Updated</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name'>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type='name'\r\n              placeholder='Enter name'\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Enter email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password Address</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='confirmPassword'>\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Confirm password'\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type='submit' variant='primary'>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n          {loadingOrders ? (\r\n              <Loader />\r\n            ) : errorOrders ? (\r\n              <Message variant='danger'>{errorOrders}</Message>\r\n            ) : (\r\n              <Table striped bordered hover responsive className='table-sm'>\r\n                <thead>\r\n                  <tr>\r\n                    <th>ID</th>\r\n                    <th>DATE</th>\r\n                    <th>TOTAL</th>\r\n                    <th>PAID</th>\r\n                    <th>DELIVERED</th>\r\n                    <th></th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {orders.map((order) => (\r\n                    <tr key={order._id}>\r\n                      <td>{order._id}</td>\r\n                      <td>{order.createdAt.substring(0, 10)}</td>\r\n                      <td>{order.totalPrice}</td>\r\n                      <td>\r\n                        {order.isPaid ? (\r\n                          order.paidAt.substring(0, 10)\r\n                        ) : (\r\n                          <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        {order.isDelivered ? (\r\n                          order.deliveredAt.substring(0, 10)\r\n                        ) : (\r\n                          <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        <LinkContainer to={`/order/${order._id}`}>\r\n                          <Button className='btn-sm' variant='light'>\r\n                            Details\r\n                          </Button>\r\n                        </LinkContainer>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            )}\r\n        \r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n\r\n  export default ProfileScreen ","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_LIST_MY_REQUEST, \r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL\r\n} from '../constants/orderContants'\r\n\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_CREATE_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ?\r\n                    error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_DETAILS_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ?\r\n                    error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_PAY_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message ?\r\n                    error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_LIST_MY_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.get(`/api/orders/myorders`, config)\r\n  \r\n      dispatch({\r\n        type: ORDER_LIST_MY_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ORDER_LIST_MY_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  } ","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Sign In</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n        \r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Shipping</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Place Order</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\n\r\nconst ShippingScreen = () => {\r\n    const cart = useSelector((state) => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        navigate('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address}\r\n                        required\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city}\r\n                        required\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode}\r\n                        required\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country}\r\n                        required\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\n\r\nconst PaymentScreen = () => {\r\n    \r\n    const navigate = useNavigate()\r\n    const cart = useSelector((state) => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if (!shippingAddress) {\r\n        navigate('/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        navigate('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Payment Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='PayPal'\r\n                            name='paymentMethod'\r\n                            value='PayPal'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        ></Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET } from '../constants/orderContants'\r\n\r\n\r\n\r\nconst OrderScreen = () => {\r\n\r\n    const params = useParams()\r\n    const orderId = params.id\r\n    const dispatch = useDispatch()\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector((state) => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n    \r\n    const orderPay = useSelector((state) => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    if (!loading) {\r\n        // calculate prices\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n\r\n        order.itemsPrice = addDecimals(\r\n            order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n    \r\n        if (!order || successPay) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, orderId, successPay, order])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n        <>\r\n        <h1>Order {order._id}</h1>\r\n        <Row>\r\n            <Col md={8}>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h2>Shipping</h2>\r\n                        <p>\r\n                            <strong>Name: </strong> {order.user.name}\r\n                        </p>\r\n                        <p>\r\n                            <strong>Email: </strong>{' '}\r\n                            <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                        </p>\r\n                        <p>\r\n                            <strong>Address: </strong>\r\n                            {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                            {order.shippingAddress.postalCode}{' '}\r\n                            {order.shippingAddress.country}\r\n                        </p>\r\n                        {order.isDelivered ? (\r\n                            <Message variant='success'>\r\n                                Delivered on {order.deliveredAt}\r\n                            </Message>\r\n                        ) : (\r\n                            <Message variant='danger'>Not Delivered</Message>\r\n                        )}\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                        <h2>Payment Method</h2>\r\n                        <p>\r\n                            <strong>Method: </strong> {order.paymentMethod}\r\n                        </p>\r\n                        {order.isPaid ? (\r\n                            <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                        ) : (\r\n                            <Message variant='danger'>Not Paid</Message>\r\n                        )}\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                        <h2>Order Items</h2>\r\n                        {order.orderItems.length === 0 ? (\r\n                            <Message>Order is empty</Message>\r\n                        ) : (\r\n                            <ListGroup variant='flush'>\r\n                                {order.orderItems.map((item, index) => (\r\n                                    <ListGroup.Item key={index}>\r\n                                        <Row>\r\n                                            <Col md={1}>\r\n                                                <Image\r\n                                                    src={item.image}\r\n                                                    alt={item.name}\r\n                                                    fluid\r\n                                                    rounded\r\n                                                />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Link to={`/product/${item.product}`}>\r\n                                                    {item.name}\r\n                                                </Link>\r\n                                            </Col>\r\n                                            <Col md={4}>\r\n                                                {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                ))}\r\n                            </ListGroup>\r\n                        )}\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Summary</h2>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Items</Col>\r\n                                <Col>${order.itemsPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Col>Shipping</Col>\r\n                            <Col>${order.shippingPrice}</Col>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Tax</Col>\r\n                                <Col>${order.taxPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Total</Col>\r\n                                <Col>${order.totalPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        {!order.isPaid && (\r\n                            <ListGroup.Item>\r\n                                {loadingPay && <Loader />}\r\n                                {!sdkReady ? (\r\n                                    <Loader />\r\n                                ) : (\r\n                                    <PayPalButton\r\n                                        amount={order.totalPrice}\r\n                                        onSuccess={successPaymentHandler}\r\n                                    />\r\n                                )}\r\n                            </ListGroup.Item>\r\n                        )}\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderScreen","import React, { useEffect } from 'react'\r\nimport { Link, useNavigate  } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\nconst PlaceOrderScreen = () => {\r\n  \r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n  const cart = useSelector((state) => state.cart)\r\n  \r\n  const orderCreate = useSelector((state) => state.orderCreate)\r\n  const { order, success, error } = orderCreate\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      navigate(`/order/${order._id}`)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [success])\r\n\r\n  //   Calculate prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2)\r\n  }\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  )\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 20)\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2)\r\n\r\n  const placeOrderHandler = () => {\r\n     dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    )   \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                {cart.shippingAddress.postalCode},{' '}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${addDecimals(item.qty * item.price)}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen","import React from 'react';\r\nimport {Container} from 'react-bootstrap';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\n\r\nimport Header from './components/Header.js';\r\nimport Footer from './components/Footer.js';\r\nimport HomeScreen from './Screens/HomeScreen.js';\r\nimport ProductScreen from './Screens/ProductScreen.js';\r\nimport CartScreen from './Screens/CartScreen.js';\r\nimport LoginScreen from './Screens/LoginScreen.js';\r\nimport RegisterScreen from './Screens/RegisterScreen.js';\r\nimport ProfileScreen from './Screens/ProfileScreen.js';\r\nimport ShippingScreen from './Screens/ShippingScreen.js';\r\nimport PaymentScreen from './Screens/PaymentScreen.js';\r\nimport OrderScreen from './Screens/OrderScreen.js';\r\nimport PlaceOrderScreen from './Screens/PlaceOrderScreen.js';\r\n\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n  <>\r\n    <Router>                                                                          {/* enclose in Router to make all components routable */}\r\n        <Header />                \r\n          <main className='py-3'>                                                     {/* create space between header and homescreen  */}\r\n            <Container>\r\n          \r\n            <Routes>\r\n              <Route path='/' element={<HomeScreen />} exact />                       {/* url defined to homescreen '/' means its fixed \"exact provides specificity\" */}\r\n              <Route path='/product/:id' element={<ProductScreen />} />               {/* : is changing part of URL, element is component you go to */}\r\n              <Route path='/cart' element={<CartScreen />} />\r\n              <Route path='/cart/:id' element={<CartScreen />} />\r\n              <Route path='/login' element={<LoginScreen />}/>\r\n              <Route path='/register' element={<RegisterScreen />} />\r\n              <Route path='/profile' element={<ProfileScreen />} />\r\n              <Route path='/shipping' element={<ShippingScreen />} />\r\n              <Route path='/payment' element={<PaymentScreen />} />\r\n              <Route path='/order/:id' element={<OrderScreen />} />\r\n              <Route path='/placeorder' element={<PlaceOrderScreen />} />\r\n            </Routes>\r\n\r\n            </Container>\r\n          </main>\r\n        <Footer />\r\n      </Router>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './bootstrap.css'\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}